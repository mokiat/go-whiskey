// This file was generated by counterfeiter
package shader_fakes

import (
	"sync"

	"github.com/momchil-atanasov/go-whiskey/graphics/shader"
)

type FakeShaderData struct {
	SetSourceCodeStub        func(string)
	setSourceCodeMutex       sync.RWMutex
	setSourceCodeArgsForCall []struct {
		arg1 string
	}
	SourceCodeStub        func() string
	sourceCodeMutex       sync.RWMutex
	sourceCodeArgsForCall []struct{}
	sourceCodeReturns struct {
		result1 string
	}
}

func (fake *FakeShaderData) SetSourceCode(arg1 string) {
	fake.setSourceCodeMutex.Lock()
	fake.setSourceCodeArgsForCall = append(fake.setSourceCodeArgsForCall, struct {
		arg1 string
	}{arg1})
	fake.setSourceCodeMutex.Unlock()
	if fake.SetSourceCodeStub != nil {
		fake.SetSourceCodeStub(arg1)
	}
}

func (fake *FakeShaderData) SetSourceCodeCallCount() int {
	fake.setSourceCodeMutex.RLock()
	defer fake.setSourceCodeMutex.RUnlock()
	return len(fake.setSourceCodeArgsForCall)
}

func (fake *FakeShaderData) SetSourceCodeArgsForCall(i int) string {
	fake.setSourceCodeMutex.RLock()
	defer fake.setSourceCodeMutex.RUnlock()
	return fake.setSourceCodeArgsForCall[i].arg1
}

func (fake *FakeShaderData) SourceCode() string {
	fake.sourceCodeMutex.Lock()
	fake.sourceCodeArgsForCall = append(fake.sourceCodeArgsForCall, struct{}{})
	fake.sourceCodeMutex.Unlock()
	if fake.SourceCodeStub != nil {
		return fake.SourceCodeStub()
	} else {
		return fake.sourceCodeReturns.result1
	}
}

func (fake *FakeShaderData) SourceCodeCallCount() int {
	fake.sourceCodeMutex.RLock()
	defer fake.sourceCodeMutex.RUnlock()
	return len(fake.sourceCodeArgsForCall)
}

func (fake *FakeShaderData) SourceCodeReturns(result1 string) {
	fake.SourceCodeStub = nil
	fake.sourceCodeReturns = struct {
		result1 string
	}{result1}
}

var _ shader.ShaderData = new(FakeShaderData)
