// This file was generated by counterfeiter
package client_fakes

import (
	"sync"

	"github.com/momchil-atanasov/go-whiskey/graphics/client"
)

type FakeAttributeClient struct {
	EnableAttributeStub        func(location client.AttributeLocation) error
	enableAttributeMutex       sync.RWMutex
	enableAttributeArgsForCall []struct {
		location client.AttributeLocation
	}
	enableAttributeReturns struct {
		result1 error
	}
	DisableAttributeStub        func(location client.AttributeLocation) error
	disableAttributeMutex       sync.RWMutex
	disableAttributeArgsForCall []struct {
		location client.AttributeLocation
	}
	disableAttributeReturns struct {
		result1 error
	}
	ConfigureAttributeStub        func(location client.AttributeLocation, components, strideInBytes, offsetInBytes int) error
	configureAttributeMutex       sync.RWMutex
	configureAttributeArgsForCall []struct {
		location      client.AttributeLocation
		components    int
		strideInBytes int
		offsetInBytes int
	}
	configureAttributeReturns struct {
		result1 error
	}
}

func (fake *FakeAttributeClient) EnableAttribute(location client.AttributeLocation) error {
	fake.enableAttributeMutex.Lock()
	fake.enableAttributeArgsForCall = append(fake.enableAttributeArgsForCall, struct {
		location client.AttributeLocation
	}{location})
	fake.enableAttributeMutex.Unlock()
	if fake.EnableAttributeStub != nil {
		return fake.EnableAttributeStub(location)
	} else {
		return fake.enableAttributeReturns.result1
	}
}

func (fake *FakeAttributeClient) EnableAttributeCallCount() int {
	fake.enableAttributeMutex.RLock()
	defer fake.enableAttributeMutex.RUnlock()
	return len(fake.enableAttributeArgsForCall)
}

func (fake *FakeAttributeClient) EnableAttributeArgsForCall(i int) client.AttributeLocation {
	fake.enableAttributeMutex.RLock()
	defer fake.enableAttributeMutex.RUnlock()
	return fake.enableAttributeArgsForCall[i].location
}

func (fake *FakeAttributeClient) EnableAttributeReturns(result1 error) {
	fake.EnableAttributeStub = nil
	fake.enableAttributeReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeAttributeClient) DisableAttribute(location client.AttributeLocation) error {
	fake.disableAttributeMutex.Lock()
	fake.disableAttributeArgsForCall = append(fake.disableAttributeArgsForCall, struct {
		location client.AttributeLocation
	}{location})
	fake.disableAttributeMutex.Unlock()
	if fake.DisableAttributeStub != nil {
		return fake.DisableAttributeStub(location)
	} else {
		return fake.disableAttributeReturns.result1
	}
}

func (fake *FakeAttributeClient) DisableAttributeCallCount() int {
	fake.disableAttributeMutex.RLock()
	defer fake.disableAttributeMutex.RUnlock()
	return len(fake.disableAttributeArgsForCall)
}

func (fake *FakeAttributeClient) DisableAttributeArgsForCall(i int) client.AttributeLocation {
	fake.disableAttributeMutex.RLock()
	defer fake.disableAttributeMutex.RUnlock()
	return fake.disableAttributeArgsForCall[i].location
}

func (fake *FakeAttributeClient) DisableAttributeReturns(result1 error) {
	fake.DisableAttributeStub = nil
	fake.disableAttributeReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeAttributeClient) ConfigureAttribute(location client.AttributeLocation, components int, strideInBytes int, offsetInBytes int) error {
	fake.configureAttributeMutex.Lock()
	fake.configureAttributeArgsForCall = append(fake.configureAttributeArgsForCall, struct {
		location      client.AttributeLocation
		components    int
		strideInBytes int
		offsetInBytes int
	}{location, components, strideInBytes, offsetInBytes})
	fake.configureAttributeMutex.Unlock()
	if fake.ConfigureAttributeStub != nil {
		return fake.ConfigureAttributeStub(location, components, strideInBytes, offsetInBytes)
	} else {
		return fake.configureAttributeReturns.result1
	}
}

func (fake *FakeAttributeClient) ConfigureAttributeCallCount() int {
	fake.configureAttributeMutex.RLock()
	defer fake.configureAttributeMutex.RUnlock()
	return len(fake.configureAttributeArgsForCall)
}

func (fake *FakeAttributeClient) ConfigureAttributeArgsForCall(i int) (client.AttributeLocation, int, int, int) {
	fake.configureAttributeMutex.RLock()
	defer fake.configureAttributeMutex.RUnlock()
	return fake.configureAttributeArgsForCall[i].location, fake.configureAttributeArgsForCall[i].components, fake.configureAttributeArgsForCall[i].strideInBytes, fake.configureAttributeArgsForCall[i].offsetInBytes
}

func (fake *FakeAttributeClient) ConfigureAttributeReturns(result1 error) {
	fake.ConfigureAttributeStub = nil
	fake.configureAttributeReturns = struct {
		result1 error
	}{result1}
}

var _ client.AttributeClient = new(FakeAttributeClient)
