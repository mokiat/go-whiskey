// This file was generated by counterfeiter
package uniform_fakes

import (
	"sync"

	"github.com/momchil-atanasov/go-whiskey/graphics/client"
	"github.com/momchil-atanasov/go-whiskey/graphics/uniform"
)

type FakeUniformValue struct {
	BindStub        func(uniformClient client.UniformClient, location client.UniformLocation)
	bindMutex       sync.RWMutex
	bindArgsForCall []struct {
		uniformClient client.UniformClient
		location      client.UniformLocation
	}
}

func (fake *FakeUniformValue) Bind(uniformClient client.UniformClient, location client.UniformLocation) {
	fake.bindMutex.Lock()
	fake.bindArgsForCall = append(fake.bindArgsForCall, struct {
		uniformClient client.UniformClient
		location      client.UniformLocation
	}{uniformClient, location})
	fake.bindMutex.Unlock()
	if fake.BindStub != nil {
		fake.BindStub(uniformClient, location)
	}
}

func (fake *FakeUniformValue) BindCallCount() int {
	fake.bindMutex.RLock()
	defer fake.bindMutex.RUnlock()
	return len(fake.bindArgsForCall)
}

func (fake *FakeUniformValue) BindArgsForCall(i int) (client.UniformClient, client.UniformLocation) {
	fake.bindMutex.RLock()
	defer fake.bindMutex.RUnlock()
	return fake.bindArgsForCall[i].uniformClient, fake.bindArgsForCall[i].location
}

var _ uniform.UniformValue = new(FakeUniformValue)
