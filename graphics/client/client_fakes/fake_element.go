// This file was generated by counterfeiter
package client_fakes

import (
	"sync"

	"github.com/momchil-atanasov/go-whiskey/graphics/client"
)

type FakeElementClient struct {
	DrawTrianglesStub        func(indexCount, indexOffsetInBytes int) error
	drawTrianglesMutex       sync.RWMutex
	drawTrianglesArgsForCall []struct {
		indexCount         int
		indexOffsetInBytes int
	}
	drawTrianglesReturns struct {
		result1 error
	}
	DrawLinesStub        func(indexCount, indexOffsetInBytes int) error
	drawLinesMutex       sync.RWMutex
	drawLinesArgsForCall []struct {
		indexCount         int
		indexOffsetInBytes int
	}
	drawLinesReturns struct {
		result1 error
	}
}

func (fake *FakeElementClient) DrawTriangles(indexCount int, indexOffsetInBytes int) error {
	fake.drawTrianglesMutex.Lock()
	fake.drawTrianglesArgsForCall = append(fake.drawTrianglesArgsForCall, struct {
		indexCount         int
		indexOffsetInBytes int
	}{indexCount, indexOffsetInBytes})
	fake.drawTrianglesMutex.Unlock()
	if fake.DrawTrianglesStub != nil {
		return fake.DrawTrianglesStub(indexCount, indexOffsetInBytes)
	} else {
		return fake.drawTrianglesReturns.result1
	}
}

func (fake *FakeElementClient) DrawTrianglesCallCount() int {
	fake.drawTrianglesMutex.RLock()
	defer fake.drawTrianglesMutex.RUnlock()
	return len(fake.drawTrianglesArgsForCall)
}

func (fake *FakeElementClient) DrawTrianglesArgsForCall(i int) (int, int) {
	fake.drawTrianglesMutex.RLock()
	defer fake.drawTrianglesMutex.RUnlock()
	return fake.drawTrianglesArgsForCall[i].indexCount, fake.drawTrianglesArgsForCall[i].indexOffsetInBytes
}

func (fake *FakeElementClient) DrawTrianglesReturns(result1 error) {
	fake.DrawTrianglesStub = nil
	fake.drawTrianglesReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeElementClient) DrawLines(indexCount int, indexOffsetInBytes int) error {
	fake.drawLinesMutex.Lock()
	fake.drawLinesArgsForCall = append(fake.drawLinesArgsForCall, struct {
		indexCount         int
		indexOffsetInBytes int
	}{indexCount, indexOffsetInBytes})
	fake.drawLinesMutex.Unlock()
	if fake.DrawLinesStub != nil {
		return fake.DrawLinesStub(indexCount, indexOffsetInBytes)
	} else {
		return fake.drawLinesReturns.result1
	}
}

func (fake *FakeElementClient) DrawLinesCallCount() int {
	fake.drawLinesMutex.RLock()
	defer fake.drawLinesMutex.RUnlock()
	return len(fake.drawLinesArgsForCall)
}

func (fake *FakeElementClient) DrawLinesArgsForCall(i int) (int, int) {
	fake.drawLinesMutex.RLock()
	defer fake.drawLinesMutex.RUnlock()
	return fake.drawLinesArgsForCall[i].indexCount, fake.drawLinesArgsForCall[i].indexOffsetInBytes
}

func (fake *FakeElementClient) DrawLinesReturns(result1 error) {
	fake.DrawLinesStub = nil
	fake.drawLinesReturns = struct {
		result1 error
	}{result1}
}

var _ client.ElementClient = new(FakeElementClient)
